// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console2} from "forge-std/Test.sol";
import {HexHunt} from "../src/HexHunt.sol";

contract HexHuntTest is Test {
    HexHunt public hexht;

    function setUp() public {
        hexht = new HexHunt();
    }

    function test_otter() public {
      // Calldata arrangement
      // 0x6356ce4f                                                                     <- selector for the first deployed contract
      // 0000000000000000000000000000000000000000000000000000000000000040	0x00        <- pointer for the first bytes
      // 00000000000000000000000000000000000000000000000000000000000002c0	0x20        <- pointer for the second bytes
      // 0000000000000000000000000000000000000000000000000000000000000244	0x40		<- length of the first bytes
      // 6e6ecf9600000000000000000000000000000000000000000000000000000000	0x60        <- calldata needed for the second created contract to reach the stop opcode
      // 0000002000000000000000000000000000000000000000000000000000000000	0x80        <- calldata needed for the second created contract to reach the stop opcode
      // 0000001100000000000000000000000000000000000000000000000000028e44	0xa0        <- calldata needed for the second created contract to reach the stop opcode
      // ea45085600000000000000000000000000000000000000000000000000000000	0xc0        <- calldata needed for the second created contract to reach the stop opcode
      // 0000058000000000000000000000000000000000000000000000000000028e44	0xe0        <- calldata needed for the second created contract to reach the stop opcode
      // ea450d4c00000000000000000000000000000000000000000000000000000000	0x100       <- calldata needed for the second created contract to reach the stop opcode
      // 0000144e00000000000000000000000000000000000000000000000000028e44	0x120       <- calldata needed for the second created contract to reach the stop opcode
      // ea45598500000000000000000000000000000000000000000000000000000000	0x140       <- calldata needed for the second created contract to reach the stop opcode
      // 00000b0800000000000000000000000000000000000000000000000000028e44	0x160       <- calldata needed for the second created contract to reach the stop opcode
      // ea45589400000000000000000000000000000000000000000000000000000000	0x180       <- calldata needed for the second created contract to reach the stop opcode
      // 0000095200000000000000000000000000000000000000000000000000028e44	0x1a0       <- calldata needed for the second created contract to reach the stop opcode
      // ea45d43600000000000000000000000000000000000000000000000000000000	0x1c0       <- calldata needed for the second created contract to reach the stop opcode
      // 000036a600000000000000000000000000000000000000000000000000028e44	0x1e0       <- calldata needed for the second created contract to reach the stop opcode
      // ea45c69f00000000000000000000000000000000000000000000000000000000	0x200       <- calldata needed for the second created contract to reach the stop opcode
      // 00003ee600000000000000000000000000000000000000000000000000028e44	0x220       <- calldata needed for the second created contract to reach the stop opcode
      // ea450a9600000000000000000000000000000000000000000000000000000000	0x240       <- calldata needed for the second created contract to reach the stop opcode
      // 00007a6600000000000000000000000000000000000000000000000000028e44	0x260       <- calldata needed for the second created contract to reach the stop opcode
      // ea450de400000000000000000000000000000000000000000000000000028e44	0x280       <- calldata needed for the second created contract to reach the stop opcode
      // ea45087700000000000000000000000000000000000000000000000000000000	0x2a0       <- calldata needed for the second created contract to reach the stop opcode
      // 000000000000000000000000000000000000000000000000000000000000000d	0x2c0       <- length of the second bytes
      // 616c6d6f73742074686572652100000000000000000000000000000000000000	0x2e0       <- second bytes ("almost there!") in hex


      bytes memory data = hex"6356ce4f000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000002446e6ecf960000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000028e44ea450856000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000028e44ea450d4c000000000000000000000000000000000000000000000000000000000000144e00000000000000000000000000000000000000000000000000028e44ea4559850000000000000000000000000000000000000000000000000000000000000b0800000000000000000000000000000000000000000000000000028e44ea455894000000000000000000000000000000000000000000000000000000000000095200000000000000000000000000000000000000000000000000028e44ea45d43600000000000000000000000000000000000000000000000000000000000036a600000000000000000000000000000000000000000000000000028e44ea45c69f0000000000000000000000000000000000000000000000000000000000003ee600000000000000000000000000000000000000000000000000028e44ea450a960000000000000000000000000000000000000000000000000000000000007a6600000000000000000000000000000000000000000000000000028e44ea450de400000000000000000000000000000000000000000000000000028e44ea45087700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d616c6d6f73742074686572652100000000000000000000000000000000000000";

      hexht.solve(data);
    }
}